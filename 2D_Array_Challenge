#include <bits/stdc++.h>

using namespace std;

void printMatrix(vector<vector<int>> arr)//For testing and Debugging
{
    for(int i = 0; i<arr.size();i++)
    {
        for(int j=0; j<arr.size(); j++)
        {
            cout<<arr.at(i).at(j)<<" ";
        }
        cout<<endl;
    }
}

void printHourGlass(vector<vector<int>> arr)//For Visualizing the hourglasses
{
    int count=0;
    for(int i = 0; i<arr.size()-2;i++)
    {
        for(int j=0; j<arr.size()-2; j++)
        {
            cout<<arr.at(i).at(j)<<" ";
            cout<<arr.at(i).at(j+1)<<" ";
            cout<<arr.at(i).at(j+2)<<" ";
            cout<<endl;
            cout<<arr.at(i+1).at(j+1)<<" ";
            cout<<endl;
            cout<<arr.at(i+2).at(j)<<" ";
            cout<<arr.at(i+2).at(j+1)<<" ";
            cout<<arr.at(i+2).at(j+2)<<" ";
            cout<<endl;
            count++;
        }
        cout<<endl;
    }
    cout<<"Number of hour glass: "<<count<<endl;
}

void findMaxHourGlass(vector<vector<int>> arr)
{
    //printHourGlass(arr);//ForDebugging
    int max=0;
    int sum=0;
    
    for(int i = 0; i<arr.size()-2;i++)
    {
        for(int j=0; j<arr.size()-2; j++)
        {
            sum = arr.at(i).at(j)+arr.at(i).at(j+1)+arr.at(i).at(j+2)+arr.at(i+1).at(j+1)
                +arr.at(i+2).at(j)+arr.at(i+2).at(j+1)+arr.at(i+2).at(j+2);
            if(i==0 && j==0)//initializes max with first summation of hourglass elements
            {
                max = sum;
            }
            if(sum > max)
            {
                max = sum;
            }
        }
    }
    cout<<max;
}
int main()
{
    vector<vector<int>> arr(6);
    for (int i = 0; i < 6; i++) {
        arr[i].resize(6);

        for (int j = 0; j < 6; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }
    findMaxHourGlass(arr);
    return 0;
}


//sample Input/Output
/*
input marix A:
-1 -1 0 -9 -2 -2
-2 -1 -6 -8 -2 -5
-1 -1 -1 -2 -3 -4
-1 -9 -2 -4 -4 -5
-7 -3 -3 -2 -9 -9
-1 -3 -1 -2 -4 -5

expected result -6
*/
